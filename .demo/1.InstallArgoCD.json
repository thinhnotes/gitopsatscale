{
    "title": "Install the Argo CD",
    "description": "This is install the Argo CD to kind environment",
    "demos": [
        {
            "title": "Check Docker",
            "description": "Check docker is runing?",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "docker ps"
                }
            ]
        },
        {
            "title": "Create Minikube",
            "description": "Create Minikube Environment",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "minikube start"
                }
            ]
        },
        {
            "title": "Alias docker and kubectl command",
            "description": "Alias docker and kubectl command",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "echo 'alias k=kubectl' >>~/.bashrc"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "echo 'alias dk=docker' >>~/.bashrc"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": ". ~/.bashrc"
                }
            ]
        },
        {
            "title": "Install ArgoCd CLI",
            "description": "Install ArgoCd CLI",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "rm argocd-linux-amd64"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "argocd version"
                }
            ]
        },
        {
            "title": "Install Argo CD",
            "description": "Install Argo CD to Environment",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "kubectl create namespace argocd"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "kubectl get pods -n argocd"
                }
            ]
        },
        {
            "title": "Forward port to connect via web",
            "description": "Forward port to connect via web (if you are using on the github workspaces it need change protocal to https)",
            "steps": [
                {
                    "action": "open",
                    "path": ".demo/forwardport.txt"
                }
            ]
        },
        {
            "title": "Get password of argocd  login via web",
            "description": "Get password stored on the argocd-initial-admin-secret",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "kubectl get secrets/argocd-initial-admin-secret -n argocd --template={{.data.password}} | base64 -d"
                }
            ]
        },
        {
            "title": "Helm install dashboard",
            "description": "Helm install dashboard",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard --create-namespace --namespace kubernetes-dashboard"
                }
            ]
        },
        {
            "title": "Helm open proxy to access dashboard",
            "description": "Helm open proxy to access dashboard",
            "steps": [
                {
                    "action": "open",
                    "path": ".demo/forwardportdashboardk8s.txt"
                }
            ]
        },
        {
            "title": "Generate token to access the dashboard",
            "description": "Helm open proxy to access dashboard",
            "steps": [
                {
                    "action": "executeTerminalCommand",
                    "command": "kubectl apply -f .demo/authenticateDashboard/"
                },
                {
                    "action": "executeTerminalCommand",
                    "command": "kubectl -n kubernetes-dashboard create token admin-user"
                }
            ]
        }
    ]
}